/**
 * ============LICENSE_START=======================================================
 * org.onap.aai
 * ================================================================================
 * Copyright Â© 2017-2018 AT&T Intellectual Property. All rights reserved.
 * ================================================================================
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============LICENSE_END=========================================================
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.10.28 at 05:53:17 PM EDT
//

package org.onap.aai.domain.restResponseInfo;

import static org.junit.Assert.assertTrue;

import java.util.List;

import org.junit.Test;

public class InfoTest {
    private Info info = new Info();

    @Test
    public void infoTest() {
        Info.ResponseMessages responseMessages = info.getResponseMessages();
        if (responseMessages == null)
            responseMessages = new Info.ResponseMessages();

        List<Info.ResponseMessages.ResponseMessage> list = responseMessages.getResponseMessage();
        Info.ResponseMessages.ResponseMessage respMsg = new Info.ResponseMessages.ResponseMessage();

        respMsg.setMessageId("1");
        respMsg.setText("textValue");

        Info.ResponseMessages.ResponseMessage.Variables vars = new Info.ResponseMessages.ResponseMessage.Variables();
        vars.getVariable().add("var1");
        vars.getVariable().add("var2");

        respMsg.setVariables(vars);
        list.add(respMsg);
        info.setResponseMessages(responseMessages);

        Info.ResponseMessages responseMessages1 = info.getResponseMessages();
        List<Info.ResponseMessages.ResponseMessage> list1 = responseMessages1.getResponseMessage();
        Info.ResponseMessages.ResponseMessage respMsg1 = list1.get(0);
        assertTrue(respMsg1.getMessageId().equals("1"));
        assertTrue(respMsg1.getText().equals("textValue"));
        assertTrue(respMsg1.getVariables().getVariable().contains("var1"));
        assertTrue(respMsg1.getVariables().getVariable().contains("var2"));
    }

}
